{"version":3,"sources":["redux/const/chatList.tsx","redux/reducer/MessageReducer.tsx","redux/const/notify.tsx","redux/reducer/seenNotifyReducer.tsx","redux/reducer/index.tsx","reportWebVitals.js","components/footer/index.tsx","components/logo/index.tsx","components/nav/index.tsx","components/notify/index.tsx","components/user/index.tsx","components/header/index.tsx","components/layout/index.tsx","components/dashboard-left/index.tsx","components/dashboard-right/projects-progress/index.tsx","components/dashboard-right/recent-connect/index.tsx","components/dashboard-right/recent-message/index.tsx","components/seach-box/index.tsx","pages/dashboard/index.tsx","pages/messages/index.tsx","redux/action/addMessage.tsx","redux/action/seenMessage.tsx","pages/projects/index.tsx","pages/notifications/index.tsx","redux/action/notify.tsx","router/index.tsx","index.tsx"],"names":["chatList","id","receiver","chats","content","seen","countUnseen","chatListState","reduce","count","chat","countUnseenChat","SEEN_CHAT","ADD_CHAT","MessageReducer","state","action","newChatList","currentChat","findIndex","idChat","console","log","type","forEach","push","idUser","notifies","filter","notify","length","notifiesState","countUnseenNotifies","seenNotifyReducer","newNotifies","seenNotify","find","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","Date","getFullYear","Logo","Navbar","Brand","as","Link","to","Image","alt","src","width","height","NavHeader","countUnseenMessage","useSelector","Nav","exact","NavLink","Badge","variant","Notify","countNotify","useDispatch","User","Dropdown","NavItem","Toggle","roundedCircle","Menu","Item","Header","style","zIndex","expand","aria-controls","Collapse","Layout","children","DashboardLeft","list","ListGroup","map","item","title","author","status","date","ProjectsProgress","projectsProgress","time","percent","ProgressBar","now","RecentConnect","recentConnects","connect","name","RecentMessage","recentMessages","mess","Search","search","Form","FormControl","placeholder","aria-label","onChange","e","target","value","Button","DashBoard","listProject","i","toLocaleString","toDateString","useState","setList","Container","newList","toLowerCase","includes","Row","Col","sm","md","Messages","JSON","parse","localStorage","getItem","setCurrentChat","dispatch","message","setMessage","chatsList","handleTyping","onSend","Tab","defaultActiveKey","active","eventKey","onClick","setItem","stringify","Content","Pane","Math","random","Control","rows","Projects","listProjects","ID","partner","start","toLocaleDateString","end","projects","setProject","currentPage","setCurrentPage","indexOfFirstPost","indexOfLastPost","slice","post","index","Object","values","totalPage","ceil","items","number","Pagination","prenext","Table","responsive","column","Notifications","App","path","Helmet","persistedState","store","createStore","applyMiddleware","logger","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c9ff215.chunk.js","sourcesContent":["const chatList = [\r\n  {\r\n    id: 1,\r\n    receiver: \"TOM 1\",\r\n    chats: [\r\n      {\r\n        id: 1,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 1,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 2,\r\n  },\r\n  {\r\n    id: 2,\r\n    receiver: \"TOM 2\",\r\n    chats: [\r\n      {\r\n        id: 2,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 1,\r\n  },\r\n  {\r\n    id: 3,\r\n    receiver: \"TOM 3\",\r\n    chats: [\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 1,\r\n  },\r\n];\r\nconst countUnseenChat = chatList.reduce((count, chat) => {\r\n  return count + chat.countUnseen;\r\n}, 0);\r\n\r\nexport const chatListState = {\r\n  chatList,\r\n  countUnseenChat: 1000,\r\n  // currentChat: 1,\r\n};\r\n","import { chatListState } from \"../const/chatList\";\r\nconst SEEN_CHAT = \"SEEN_CHAT\";\r\nconst ADD_CHAT = \"ADD_CHAT\";\r\nconst MessageReducer = (state = chatListState, action: any) => {\r\n  let newChatList = [...state.chatList];\r\n  let currentChat = newChatList.findIndex((chat) => chat.id === action.idChat);\r\n  console.log('currentChat', currentChat);\r\n\r\n  switch (action.type) {\r\n    case SEEN_CHAT:\r\n      newChatList[currentChat].chats.forEach((chat) => {\r\n        chat.seen = true;\r\n      });\r\n      newChatList[currentChat].countUnseen = 0;\r\n      const countUnseenChat = newChatList.reduce((count, chat) => {\r\n        return count + chat.countUnseen;\r\n      }, 0);\r\n\r\n      return { ...state, chatList: newChatList, countUnseenChat, currentChat };\r\n\r\n    case ADD_CHAT:\r\n      newChatList[currentChat].chats.push({\r\n        id: action.idUser,\r\n        content: action.content,\r\n        seen: false,\r\n      });\r\n\r\n      return { ...state, chatList: newChatList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default MessageReducer;\r\n","const notifies = [\r\n  { id: 1, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 2, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 3, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 4, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 5, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 6, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 7, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 8, content: \"Lorem, ipsum dolor.\", seen: false },\r\n];\r\nconst countUnseen = notifies.filter((notify) => notify.seen === false).length;\r\n\r\nexport const notifiesState = {\r\n  notifies: notifies,\r\n  countUnseenNotifies: countUnseen,\r\n};\r\n","import { notifiesState } from \"../const/notify\";\r\n\r\nconst seenNotifyReducer = (state = notifiesState, action: any) => {\r\n  switch (action.type) {\r\n    case \"SEEN\":\r\n      let { notifies, countUnseenNotifies } = state;\r\n      const newNotifies = [...notifies];\r\n      const seenNotify = newNotifies.find((notify) => notify.id === action.id);\r\n      if (seenNotify) {\r\n        seenNotify.seen = true;\r\n      }\r\n\r\n      countUnseenNotifies = newNotifies.filter(\r\n        (notify) => notify.seen === false\r\n      ).length;\r\n      return { ...state, notifies: newNotifies, countUnseenNotifies };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default seenNotifyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport MessageReducer from \"./MessageReducer\";\r\nimport seenNotifyReducer from \"./seenNotifyReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  notifiesState: seenNotifyReducer,\r\n  chatListState: MessageReducer,\r\n});\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.scss\";\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer d-flex d-md-block mr-auto\">\r\n      <div className=\"content\">\r\n        &copy; {new Date().getFullYear()} - All Right Reserved\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Image, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Navbar.Brand as={Link} to=\"/\">\r\n      <Image alt=\"logo\" src=\"./img/GTI Logo.svg\" width=\"100%\" height=\"100%\" className=\"d-inline-block align-top\" />\r\n    </Navbar.Brand>\r\n  );\r\n}\r\nexport default Logo;\r\n","import { Nav, Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction NavHeader() {\r\n  const countUnseenMessage = useSelector(\r\n    (state: RootState) => state.chatListState.countUnseenChat\r\n  );\r\n  return (\r\n    <Nav className=\"mr-auto nav-header\">\r\n      <Nav.Link exact as={NavLink} to=\"./\">\r\n        DashBoard\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/projects\">\r\n        Projects\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/messages\" className=\"position-relative\">\r\n        Messages\r\n        <Badge className=\"mess-count position-absolute\" variant=\"danger\">\r\n          {countUnseenMessage}\r\n        </Badge>\r\n      </Nav.Link>\r\n    </Nav>\r\n  );\r\n}\r\nexport default NavHeader;\r\n","import { useState } from \"react\";\r\nimport { Badge, Image, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction Notify() {\r\n  const countNotify = useSelector(\r\n    (state: RootState) => state.notifiesState.countUnseenNotifies\r\n  );\r\n  const dispatch = useDispatch();\r\n  // const handleSeen = (id: number) => {\r\n  //   dispatch(seenNotify(id));\r\n  // };\r\n  return (\r\n    <Nav.Link\r\n      as={NavLink}\r\n      to=\"/notifications\"\r\n      className=\"position-relative notify\"\r\n    >\r\n      <Image src=\"./img/bell-o.svg\" alt=\"notify\" />\r\n      <Badge className=\"notify-count position-absolute\" variant=\"danger\">\r\n        {countNotify}\r\n      </Badge>\r\n    </Nav.Link>\r\n  );\r\n}\r\n\r\nexport default Notify;\r\n","import { Dropdown, Image, NavItem, NavLink } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction User() {\r\n  return (\r\n    <Dropdown as={NavItem} className=\"user\">\r\n      <Dropdown.Toggle as={NavLink} className=\"d-flex align-items-center\">\r\n        <Image src=\"./img/0.png\" width={40} height={40} alt=\"img\" roundedCircle />\r\n\r\n        <div className=\"d-flex flex-column ml-2\">\r\n          <div className=\"user-name text-light\">Donal Trump</div>\r\n          <div className=\"user-mode text-primary\">Client Mode</div>\r\n        </div>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item>Logout</Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\nexport default User;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport Logo from \"../logo\";\r\nimport NavHeader from \"../nav\";\r\nimport Notify from \"../notify\";\r\nimport User from \"../user\";\r\nimport \"./index.scss\";\r\nconst Header = function () {\r\n  return (\r\n    <header className=\"header-top position-fixed w-100\" style={{ zIndex: 1000 }}>\r\n      <div className=\"navbar-top\">\r\n        <Navbar expand=\"md\">\r\n          <Logo />\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <NavHeader />\r\n            <Notify />\r\n            <User />\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactNode } from \"react\";\r\nimport Footer from \"../footer\";\r\nimport Header from \"../header\";\r\nimport \"./index.scss\";\r\n\r\nconst Layout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"main-page \">{children}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface item {\r\n  title: string;\r\n  author: string;\r\n  status: string;\r\n  date: string;\r\n}\r\ninterface ListData {\r\n  list: Array<item>;\r\n}\r\nfunction DashboardLeft({ list }: ListData) {\r\n  return (\r\n    <div className=\"dashboard-left \">\r\n      <ListGroup variant=\"flush\">\r\n        {list &&\r\n          list.map((item) => (\r\n            <ListGroup.Item action className=\"d-flex \">\r\n              <Image src=\"./img/0.png\" width=\"50px\" height=\"50px\" roundedCircle />\r\n              <div className=\"d-flex justify-content-between w-100 ml-3\">\r\n                <div className=\"title\">\r\n                  <h6> {item.title} </h6>\r\n                  <div className=\"author text-secondary\"> {item.author} </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"status text-success text-right font-weight-bold\"> {item.status} </div>\r\n                  <div className=\"date text-secondary\"> {item.date} </div>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardLeft;\r\n","import { ProgressBar } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction ProjectsProgress() {\r\n  const projectsProgress = [\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 10,\r\n      percent: 20,\r\n    },\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 15,\r\n      percent: 50,\r\n    },\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 5,\r\n      percent: 70,\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"project\">\r\n      <h5 className=\"title\">Projects in progress</h5>\r\n      <div className=\"project-bar\">\r\n        {projectsProgress &&\r\n          projectsProgress.map((item) => (\r\n            <div className=\"project-detail\">\r\n              <div className=\"project-title d-flex justify-content-between\">\r\n                <span>{item.title}</span>\r\n                <span>{item.time} days to deadline</span>\r\n              </div>\r\n              <ProgressBar\r\n                variant={\r\n                  item.percent < 50\r\n                    ? \"success\"\r\n                    : item.percent < 70\r\n                    ? \"warning\"\r\n                    : \"danger\"\r\n                }\r\n                now={item.percent}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsProgress;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface Connect {\r\n  name: string;\r\n  content: string;\r\n}\r\ninterface IRecentConnect {\r\n  recentConnects: Array<Connect>;\r\n}\r\nfunction RecentConnect({ recentConnects }: IRecentConnect) {\r\n  return (\r\n    <div className=\"recent-connect\">\r\n      <h5 className=\"title\">Recent Connect</h5>\r\n      <ListGroup variant=\"flush\">\r\n        {recentConnects &&\r\n          recentConnects.map((connect) => (\r\n            <ListGroup.Item action>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <h6 className=\"name\">{connect.name}</h6>\r\n                  <p className=\"text-secondary\">{connect.content}</p>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentConnect;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface Mess {\r\n  name: string;\r\n  date: string;\r\n  content: string;\r\n}\r\ninterface RecentMess {\r\n  recentMessages: Array<Mess>;\r\n}\r\nfunction RecentMessage({ recentMessages }: RecentMess) {\r\n  return (\r\n    <div className=\"recent-message\">\r\n      <h5 className=\"title\">Recent Message</h5>\r\n      <ListGroup variant=\"flush\">\r\n        {recentMessages &&\r\n          recentMessages.map((mess) => (\r\n            <ListGroup.Item action>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"name\">{mess.name}</h6>\r\n                    <span className=\"text-secondary recent-date\">\r\n                      {mess.date}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-secondary\">{mess.content}</p>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentMessage;\r\n","import { Button, Form, FormControl, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\nfunction Search({ search }: { search: Function }) {\r\n  // const [valueSearch, setValueSearch] = useState(\"\");\r\n  const getValueSearch = function (e: any) {\r\n    search(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <Form className=\"search d-flex position-relative\">\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={getValueSearch}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"search-btn position-absolute \"\r\n          variant=\"\"\r\n        >\r\n          <Image src=\"./img/search.svg\" />\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport DashboardLeft from \"../../components/dashboard-left\";\r\nimport ProjectsProgress from \"../../components/dashboard-right/projects-progress\";\r\nimport RecentConnect from \"../../components/dashboard-right/recent-connect\";\r\nimport RecentMessage from \"../../components/dashboard-right/recent-message\";\r\nimport Search from \"../../components/seach-box\";\r\nimport \"./index.scss\";\r\n\r\nfunction DashBoard() {\r\n  const listProject: Array<any> = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    listProject.push({\r\n      title: \"Title \" + i,\r\n      author: \"author \" + i,\r\n      status: \"Active\",\r\n      date: new Date().toLocaleString(),\r\n    });\r\n  }\r\n\r\n  const recentMessages = [\r\n    {\r\n      name: \"Black\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  //\r\n  const recentConnects = [\r\n    {\r\n      name: \"Black\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  const [list, setList] = useState(listProject);\r\n  const search = (value: any) => {\r\n    console.log(value);\r\n\r\n    if (!value) {\r\n      setList(listProject);\r\n      return;\r\n    }\r\n    const newList = listProject.filter((item) =>\r\n      item.title.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    console.log(newList);\r\n    setList(newList);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"dasboard\">\r\n          <div className=\"top-content d-flex flex-column flex-md-row align-items-end align-items-md-stretch\">\r\n            <div className=\"mr-auto  mb-md-0 mb-1 search-box\">\r\n              <Search search={search} />\r\n            </div>\r\n\r\n            <Button className=\"btn-create \" variant=\"primary\">\r\n              New Project\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Row>\r\n              <Col sm={12} md={7}>\r\n                <DashboardLeft list={list} />\r\n              </Col>\r\n              <Col sm={12} md={5}>\r\n                <div className=\"dashboard-right\">\r\n                  <RecentMessage recentMessages={recentMessages} />\r\n                  <RecentConnect recentConnects={recentConnects} />\r\n                  <ProjectsProgress />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n<p>\r\n  Lorem ipsum dolor sit amet consectetur adipisicing elit. Saepe commodi tempora\r\n  obcaecati animi officia doloribus a! Nihil doloribus cumque iure quidem eaque\r\n  dolorem voluptatem laboriosam asperiores eos! Saepe fugit consectetur\r\n  voluptatum praesentium nam sunt iusto aspernatur sit, animi dolorem quaerat\r\n  asperiores repudiandae nemo autem, iure alias qui accusantium vel numquam\r\n  ratione quis error amet nihil tenetur? In, beatae velit, incidunt odit debitis\r\n  inventore id, dolore nemo minus adipisci voluptas nihil provident error iusto\r\n  perspiciatis ullam laudantium rem porro reprehenderit saepe. Eius deserunt\r\n  harum neque quidem. Commodi repudiandae et error quisquam dignissimos corporis\r\n  adipisci velit minima expedita. Laborum maxime doloribus doloremque.\r\n</p>;\r\nexport default DashBoard;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Image, ListGroup, Tab } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Search from \"../../components/seach-box\";\r\nimport { addMessage } from \"../../redux/action/addMessage\";\r\nimport { seenMessage } from \"../../redux/action/seenMessage\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction Messages() {\r\n  const myID = 10;\r\n  const [currentChat, setCurrentChat] = useState<number>(\r\n    JSON.parse(localStorage.getItem(\"currentChat\") || \"1\")\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const chatsList = useSelector(\r\n    (state: RootState) => state.chatListState.chatList\r\n  );\r\n  // const currentChat = useSelector(\r\n  //   (state: RootState) => state.chatListState.currentChat\r\n  // );\r\n  // const [currentChat, setCurrentChat] = useState<any>(\r\n  //   localStorage.getItem(\"currentChat\") || null\r\n  // );\r\n\r\n  const handleTyping = function (e: any) {\r\n    setMessage(e.target.value);\r\n  };\r\n  const onSend = function () {\r\n    if (message) {\r\n      dispatch(addMessage(currentChat, myID, message));\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  const search = (value: any) => {\r\n    // if (!value) {\r\n    // setChatList(chatsList);\r\n    // }\r\n    // const newChats = chatsList.filter((chat) => chat.receiver === value);\r\n    // setChatList(newChats);\r\n  };\r\n  const setChat = (id: number) => {\r\n    setCurrentChat(id);\r\n    setMessage(\"\");\r\n    localStorage.setItem(\"currentChat\", JSON.stringify(id));\r\n  };\r\n  return (\r\n    <div className=\"page-message \">\r\n      <Tab.Container\r\n        id=\"list-group-tabs-example\"\r\n        defaultActiveKey={\"chat\" + currentChat}\r\n      >\r\n        <div className=\"d-flex flex-column flex-lg-row justify-content-between\">\r\n          <div className=\"page-message__list\">\r\n            <div className=\"d-flex justify-content-between direct-message\">\r\n              <span>\r\n                Direct Message\r\n                <Image src=\"./img/angle-right.svg\" />\r\n              </span>\r\n              <span>\r\n                <Image src=\"./img/new message icon.svg\" alt=\"new mess\" />\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"mt-2 mb-2\">\r\n              <Search search={search} />\r\n            </div>\r\n            <ListGroup variant=\"flush\">\r\n              {chatsList &&\r\n                chatsList.map(function (chat) {\r\n                  return (\r\n                    <ListGroup.Item\r\n                      active={chat.id === currentChat}\r\n                      action\r\n                      eventKey={\"chat\" + chat.id}\r\n                      key={chat.id}\r\n                      onClick={() => {\r\n                        setChat(chat.id);\r\n                        dispatch(seenMessage(chat.id));\r\n                      }}\r\n                      variant={chat.countUnseen === 0 ? \"secondary\" : \"light\"}\r\n                    >\r\n                      <div className=\"list-item d-flex\">\r\n                        <div className=\"flex-grow-0 avatar\">\r\n                          <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                        </div>\r\n                        <div className=\"flex-grow-1 ml-2\">\r\n                          <div className=\"d-flex justify-content-between\">\r\n                            <h6 className=\"name\">{chat.receiver}</h6>\r\n                            <span className=\"text-secondary recent-date\">\r\n                              1 day ago\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"text-secondary mw-100 width-200 text-truncate\">\r\n                            {chat.chats[chat.chats.length - 1].content}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </ListGroup.Item>\r\n                  );\r\n                })}\r\n            </ListGroup>\r\n          </div>\r\n          <div className=\"flex-item message-detail\">\r\n            <Tab.Content>\r\n              {chatsList &&\r\n                chatsList.map(function (chat) {\r\n                  return (\r\n                    <Tab.Pane\r\n                      className=\"message-tab\"\r\n                      eventKey={\"chat\" + chat.id}\r\n                      key={chat.id}\r\n                    >\r\n                      <div className=\"message-detail__info\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <div>\r\n                            <Image src=\"./img/0.png\" alt=\"avatar\" />\r\n                            <span className=\"message-detail__username\">\r\n                              {chat.receiver}\r\n                            </span>\r\n                          </div>\r\n                          <span>\r\n                            <Image src=\"./img/phone.svg\" alt=\"phone\" />\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"message-detail__content overflow-auto\">\r\n                        {chat.chats.map((mess) =>\r\n                          mess.id === myID ? (\r\n                            <div\r\n                              key={Math.random()}\r\n                              className=\"my-message text-right text-break  \"\r\n                            >\r\n                              <p className=\"d-inline-block bg-blue ml-5 mw-75 \">\r\n                                {mess.content}\r\n                              </p>\r\n                            </div>\r\n                          ) : (\r\n                            <div\r\n                              key={Math.random()}\r\n                              className=\" text-left receive-message\"\r\n                            >\r\n                              <Image src=\"./img/0.png\" alt=\"avatar\" />\r\n                              <p className=\"d-inline-block mr-1\">\r\n                                {mess.content}\r\n                              </p>\r\n                            </div>\r\n                          )\r\n                        )}\r\n                      </div>\r\n                      <div className=\"message-detail__custom\">\r\n                        <div className=\"d-flex justify-content-between\">\r\n                          <div>\r\n                            <Image src=\"./img/paperclip icon.svg\" />\r\n                          </div>\r\n                          <div className=\"ml-4 w-100 \">\r\n                            <Form.Control\r\n                              as=\"textarea\"\r\n                              rows={1}\r\n                              className=\"border-radius-20\"\r\n                              type=\"text\"\r\n                              placeholder=\"Start typing a message...\"\r\n                              onChange={handleTyping}\r\n                              value={message}\r\n                            />\r\n                          </div>\r\n                          <Button\r\n                            onClick={onSend}\r\n                            type=\"submit\"\r\n                            className=\"btn-send\"\r\n                          >\r\n                            Send\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </Tab.Pane>\r\n                  );\r\n                })}\r\n            </Tab.Content>\r\n          </div>\r\n        </div>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","export const addMessage = (idChat: number, idUser: number, content: string) => {\r\n  return {\r\n    type: \"ADD_CHAT\",\r\n    idChat,\r\n    idUser,\r\n    content,\r\n  };\r\n};\r\n","export const seenMessage = (idChat: number) => {\r\n  return {\r\n    type: \"SEEN_CHAT\",\r\n    idChat,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { Button, Pagination, Table } from \"react-bootstrap\";\r\nimport Search from \"../../components/seach-box\";\r\nimport \"./index.scss\";\r\n\r\nfunction Projects() {\r\n  const postPerPage = 5;\r\n  const columns = [\r\n    \"Status\",\r\n    \"Project Name\",\r\n    \"Project ID\",\r\n    \"Partner\",\r\n    \"Start Date\",\r\n    \"End Date\",\r\n  ];\r\n  const listProjects: Array<any> = [];\r\n  for (let i = 0; i <= 20; i++) {\r\n    listProjects.push({\r\n      status: \"Active\",\r\n      name: \"Medical Device \" + i,\r\n      ID: i,\r\n      partner: \"Partner \" + i,\r\n      start: new Date().toLocaleDateString(),\r\n      end: new Date().toLocaleDateString(),\r\n    });\r\n  }\r\n\r\n  //\r\n  const [projects, setProject] = useState(listProjects);\r\n  let [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //\r\n  const indexOfFirstPost = (currentPage - 1) * postPerPage;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const currentPosts = projects.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const rows = currentPosts.map((post, index) => (\r\n    <tr key={index}>\r\n      {Object.values(post).map((value, index) => (\r\n        <td key={index}> {value} </td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n\r\n  // pagination\r\n  const totalPage = Math.ceil(projects.length / postPerPage);\r\n  let items = [];\r\n  for (let number = 1; number <= totalPage; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={() => {\r\n          setCurrentPage(number);\r\n        }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  const prenext = (number: number) => {\r\n    if (currentPage > 1 && number === -1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n    if (currentPage < totalPage && number === 1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n  };\r\n\r\n  const search = (value: any) => {\r\n    if (!value) {\r\n      setProject(listProjects);\r\n      return;\r\n    }\r\n    const newList = listProjects.filter(\r\n      (item) =>\r\n        item.status.includes(value) ||\r\n        item.name.includes(value) ||\r\n        item.partner.includes(value) ||\r\n        item.start.includes(value) ||\r\n        item.end.includes(value)\r\n    );\r\n    setProject(newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <div className=\"top-content d-flex flex-column flex-md-row align-items-end align-items-md-stretch\">\r\n        <div className=\"mr-auto  mb-md-0 mb-1 search-box\">\r\n          <Search search={search} />\r\n        </div>\r\n\r\n        <Button className=\"btn-create\" variant=\"primary\">\r\n          New Project\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"projects-content\">\r\n        <div className=\"table p-md-4 pr-md-5 p-0\">\r\n          <Table responsive=\"lg\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((column, index) => (\r\n                  <th key={index}>{column}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"paginate d-flex\">\r\n          <div className=\" m-auto\">\r\n            <Pagination>\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  prenext(-1);\r\n                }}\r\n              >\r\n                Pre\r\n              </Button>\r\n              {items}\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  prenext(1);\r\n                }}\r\n              >\r\n                Next\r\n              </Button>\r\n            </Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { seenNotify } from \"../../redux/action/notify\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\ninterface Notify {\r\n  id: number;\r\n  content: string;\r\n  seen: boolean;\r\n}\r\n\r\nfunction Notifications() {\r\n  const notifies = useSelector(\r\n    (state: RootState) => state.notifiesState.notifies\r\n  );\r\n  const dispatch = useDispatch();\r\n  const handleSeen = (id: number) => {\r\n    dispatch(seenNotify(id));\r\n  };\r\n\r\n  // ==============RENDER===========\r\n  return (\r\n    <div className=\"page-notify \">\r\n      <ListGroup variant=\"flush\" className=\"page-notify__content bg-white\">\r\n        {notifies &&\r\n          notifies.map(function (notify: any, index: any) {\r\n            return (\r\n              <ListGroup.Item\r\n                action\r\n                key={index}\r\n                variant={notify.seen ? \"secondary\" : \"light\"}\r\n                onClick={() => {\r\n                  handleSeen(notify.id);\r\n                }}\r\n              >\r\n                <div className=\"d-flex align-items-center  \">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                  <span className=\"name ml-2 mr-auto\">{notify.content}.</span>\r\n                  <span className=\"text-secondary recent-date \">1 day ago</span>\r\n                </div>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","export const seenNotify = (id: number) => {\r\n  return {\r\n    type: \"SEEN\",\r\n    id,\r\n  };\r\n};\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"../components/layout\";\r\nimport DashBoard from \"../pages/dashboard\";\r\nimport Messages from \"../pages/messages\";\r\nimport Projects from \"../pages/projects\";\r\nimport Notifications from \"../pages/notifications\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Helmet>\r\n              <title>Dash Board</title>\r\n            </Helmet>\r\n            <DashBoard />\r\n          </Route>\r\n          <Route path=\"/projects\">\r\n            <Helmet>\r\n              <title>Projects</title>\r\n            </Helmet>\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/messages\">\r\n            <Helmet>\r\n              <title>Messages</title>\r\n            </Helmet>\r\n            <Messages />\r\n          </Route>\r\n          <Route path=\"/notifications\">\r\n            <Helmet>\r\n              <title>Notifications</title>\r\n            </Helmet>\r\n            <Notifications  />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.scss\";\nimport rootReducer from \"./redux/reducer/index\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./router\";\nimport logger from \"redux-logger\";\nimport \"./css/customs.scss\";\n\nconst persistedState = JSON.parse(localStorage.getItem(\"reduxState\") || \"{}\");\n\nconst store = createStore(rootReducer, persistedState, applyMiddleware(logger));\n\nstore.subscribe(() => {\n  localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}