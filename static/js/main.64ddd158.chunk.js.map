{"version":3,"sources":["redux/const/chatList.tsx","redux/reducer/MessageReducer.tsx","redux/const/notify.tsx","redux/reducer/seenNotifyReducer.tsx","redux/reducer/index.tsx","reportWebVitals.js","components/footer/index.tsx","components/logo/index.tsx","components/nav/index.tsx","components/notify/index.tsx","components/user/index.tsx","components/header/index.tsx","components/layout/index.tsx","components/dashboard-left/index.tsx","components/dashboard-right/projects-progress/index.tsx","components/dashboard-right/recent-connect/index.tsx","components/dashboard-right/recent-message/index.tsx","components/seach-box/index.tsx","pages/dashboard/index.tsx","components/message-left/chat-list/index.tsx","components/message-left/direct-message/index.tsx","components/messages-right/chat-item/index.tsx","components/messages-right/message-content/index.tsx","components/messages-right/message-footer/index.tsx","components/messages-right/message-header/index.tsx","pages/messages/index.tsx","redux/action/addMessage.tsx","redux/action/seenMessage.tsx","pages/projects/index.tsx","pages/notifications/index.tsx","redux/action/notify.tsx","router/index.tsx","index.tsx"],"names":["chatList","id","receiver","chats","content","seen","countUnseen","countUnseenChat","reduce","count","chat","chatListState","SEEN_CHAT","ADD_CHAT","MessageReducer","state","action","newChatList","currentChat","findIndex","idChat","type","forEach","push","idUser","notifies","filter","notify","length","notifiesState","countUnseenNotifies","seenNotifyReducer","newNotifies","seenNotify","find","rootReducer","combineReducers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","className","Date","getFullYear","Logo","Navbar","Brand","as","Link","to","Image","alt","src","width","height","NavHeader","countUnseenMessage","useSelector","Nav","exact","NavLink","Badge","variant","Notify","countNotify","User","Dropdown","NavItem","Toggle","roundedCircle","Menu","Item","Header","style","zIndex","expand","aria-controls","Collapse","Layout","children","DashboardLeft","list","ListGroup","map","item","title","author","status","date","ProjectsProgress","projectsProgress","time","percent","ProgressBar","now","RecentConnect","recentConnects","connect","name","RecentMessage","recentMessages","mess","Search","search","Form","FormControl","placeholder","aria-label","onChange","e","target","value","Button","DashBoard","listProject","i","toLocaleString","toDateString","useState","setList","Container","console","log","newList","toLowerCase","includes","Row","Col","sm","md","ChatList","idCurrentChat","onClickUserChat","userChat","active","eventKey","onClick","DirectMessage","ChatItem","MessageContent","myRefBottom","myID","index","ref","MessageFooter","handleTyping","onEnter","message","onSend","Control","rows","onKeyPress","MessageHeader","Messages","dispatch","useDispatch","setMessage","Number","localStorage","getItem","setIdCurrentChat","useRef","useEffect","current","scrollIntoView","scrollToBottom","searchValue","setSearchVaule","setItem","JSON","stringify","key","preventDefault","Projects","listProjects","ID","partner","start","toLocaleDateString","end","projects","setProject","currentPage","setCurrentPage","indexOfFirstPost","indexOfLastPost","slice","post","Object","values","totalPage","Math","ceil","items","number","Pagination","prenext","Table","responsive","column","Notifications","App","path","Helmet","store","createStore","applyMiddleware","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64ddd158.chunk.js","sourcesContent":["const chatList = [\r\n  {\r\n    id: 1,\r\n    receiver: \"TOM 1\",\r\n    chats: [\r\n      {\r\n        id: 1,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 1,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 2,\r\n  },\r\n  {\r\n    id: 2,\r\n    receiver: \"TOM 2\",\r\n    chats: [\r\n      {\r\n        id: 2,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 1,\r\n  },\r\n  {\r\n    id: 3,\r\n    receiver: \"TOM 3\",\r\n    chats: [\r\n      {\r\n        id: 10,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n      {\r\n        id: 3,\r\n        content:\r\n          \" Lorem ipsum dolor, sit amet consectetur adipisicing elit. Culpa, accusantium.\",\r\n        seen: false,\r\n      },\r\n    ],\r\n    countUnseen: 1,\r\n  },\r\n];\r\nconst countUnseenChat = chatList.reduce((count, chat) => {\r\n  return count + chat.countUnseen;\r\n}, 0);\r\n\r\nexport const chatListState = {\r\n  chatList,\r\n  countUnseenChat,\r\n};\r\n","import { chatListState } from \"../const/chatList\";\r\nconst SEEN_CHAT = \"SEEN_CHAT\";\r\nconst ADD_CHAT = \"ADD_CHAT\";\r\nconst MessageReducer = (state = chatListState, action: any) => {\r\n  let newChatList = [...state.chatList];\r\n  let currentChat = newChatList.findIndex((chat) => chat.id === action.idChat);\r\n\r\n  switch (action.type) {\r\n    case SEEN_CHAT:\r\n      newChatList[currentChat].chats.forEach((chat) => {\r\n        chat.seen = true;\r\n      });\r\n      newChatList[currentChat].countUnseen = 0;\r\n      const countUnseenChat = newChatList.reduce((count, chat) => {\r\n        return count + chat.countUnseen;\r\n      }, 0);\r\n\r\n      return { ...state, chatList: newChatList, countUnseenChat, currentChat };\r\n\r\n    case ADD_CHAT:\r\n      newChatList[currentChat].chats.push({\r\n        id: action.idUser,\r\n        content: action.content,\r\n        seen: false,\r\n      });\r\n\r\n      return { ...state, chatList: newChatList };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default MessageReducer;\r\n","const notifies = [\r\n  { id: 1, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 2, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 3, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 4, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 5, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 6, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 7, content: \"Lorem, ipsum dolor.\", seen: false },\r\n  { id: 8, content: \"Lorem, ipsum dolor.\", seen: false },\r\n];\r\nconst countUnseen = notifies.filter((notify) => notify.seen === false).length;\r\n\r\nexport const notifiesState = {\r\n  notifies: notifies,\r\n  countUnseenNotifies: countUnseen,\r\n};\r\n","import { notifiesState } from \"../const/notify\";\r\n\r\nconst seenNotifyReducer = (state = notifiesState, action: any) => {\r\n  switch (action.type) {\r\n    case \"SEEN\":\r\n      let { notifies, countUnseenNotifies } = state;\r\n      const newNotifies = [...notifies];\r\n      const seenNotify = newNotifies.find((notify) => notify.id === action.id);\r\n      if (seenNotify) {\r\n        seenNotify.seen = true;\r\n      }\r\n\r\n      countUnseenNotifies = newNotifies.filter(\r\n        (notify) => notify.seen === false\r\n      ).length;\r\n      return { ...state, notifies: newNotifies, countUnseenNotifies };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default seenNotifyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport MessageReducer from \"./MessageReducer\";\r\nimport seenNotifyReducer from \"./seenNotifyReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  notifiesState: seenNotifyReducer,\r\n  chatListState: MessageReducer,\r\n});\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.scss\";\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer d-flex d-md-block mr-auto\">\r\n      <div className=\"content\">\r\n        &copy; {new Date().getFullYear()} - All Right Reserved\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Image, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Navbar.Brand as={Link} to=\"/\">\r\n      <Image alt=\"logo\" src=\"./img/GTI Logo.svg\" width=\"100%\" height=\"100%\" className=\"d-inline-block align-top\" />\r\n    </Navbar.Brand>\r\n  );\r\n}\r\nexport default Logo;\r\n","import { Nav, Badge } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction NavHeader() {\r\n  const countUnseenMessage = useSelector(\r\n    (state: RootState) => state.chatListState.countUnseenChat\r\n  );\r\n  return (\r\n    <Nav className=\"mr-auto nav-header\">\r\n      <Nav.Link exact as={NavLink} to=\"./\">\r\n        DashBoard\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/projects\">\r\n        Projects\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/messages\" className=\"position-relative\">\r\n        Messages\r\n        <Badge className=\"mess-count position-absolute\" variant=\"danger\">\r\n          {countUnseenMessage}\r\n        </Badge>\r\n      </Nav.Link>\r\n    </Nav>\r\n  );\r\n}\r\nexport default NavHeader;\r\n","import { Badge, Image, Nav } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction Notify() {\r\n  const countNotify = useSelector(\r\n    (state: RootState) => state.notifiesState.countUnseenNotifies\r\n  );\r\n\r\n  return (\r\n    <Nav.Link\r\n      as={NavLink}\r\n      to=\"/notifications\"\r\n      className=\"position-relative notify\"\r\n    >\r\n      <Image src=\"./img/bell-o.svg\" alt=\"notify\" />\r\n      <Badge className=\"notify-count position-absolute\" variant=\"danger\">\r\n        {countNotify}\r\n      </Badge>\r\n    </Nav.Link>\r\n  );\r\n}\r\n\r\nexport default Notify;\r\n","import { Dropdown, Image, NavItem, NavLink } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction User() {\r\n  return (\r\n    <Dropdown as={NavItem} className=\"user\">\r\n      <Dropdown.Toggle as={NavLink} className=\"d-flex align-items-center\">\r\n        <Image src=\"./img/0.png\" width={40} height={40} alt=\"img\" roundedCircle />\r\n\r\n        <div className=\"d-flex flex-column ml-2\">\r\n          <div className=\"user-name text-light\">Donal Trump</div>\r\n          <div className=\"user-mode text-primary\">Client Mode</div>\r\n        </div>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item>Logout</Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\nexport default User;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport Logo from \"../logo\";\r\nimport NavHeader from \"../nav\";\r\nimport Notify from \"../notify\";\r\nimport User from \"../user\";\r\nimport \"./index.scss\";\r\nconst Header = function () {\r\n  return (\r\n    <header className=\"header-top position-fixed w-100\" style={{ zIndex: 1000 }}>\r\n      <div className=\"navbar-top\">\r\n        <Navbar expand=\"md\">\r\n          <Logo />\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <NavHeader />\r\n            <Notify />\r\n            <User />\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactNode } from \"react\";\r\nimport Footer from \"../footer\";\r\nimport Header from \"../header\";\r\nimport \"./index.scss\";\r\n\r\nconst Layout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"main-page \">{children}</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface item {\r\n  title: string;\r\n  author: string;\r\n  status: string;\r\n  date: string;\r\n}\r\ninterface ListData {\r\n  list: Array<item>;\r\n}\r\nfunction DashboardLeft({ list }: ListData) {\r\n  return (\r\n    <div className=\"dashboard-left \">\r\n      <ListGroup variant=\"flush\">\r\n        {list &&\r\n          list.map((item) => (\r\n            <ListGroup.Item action className=\"d-flex \">\r\n              <Image src=\"./img/0.png\" width=\"50px\" height=\"50px\" roundedCircle />\r\n              <div className=\"d-flex justify-content-between w-100 ml-3\">\r\n                <div className=\"title\">\r\n                  <h6> {item.title} </h6>\r\n                  <div className=\"author text-secondary\"> {item.author} </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"status text-success text-right font-weight-bold\"> {item.status} </div>\r\n                  <div className=\"date text-secondary\"> {item.date} </div>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardLeft;\r\n","import { ProgressBar } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction ProjectsProgress() {\r\n  const projectsProgress = [\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 10,\r\n      percent: 20,\r\n    },\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 15,\r\n      percent: 50,\r\n    },\r\n    {\r\n      title: \"Lorem 123456\",\r\n      time: 5,\r\n      percent: 70,\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"project\">\r\n      <h5 className=\"title\">Projects in progress</h5>\r\n      <div className=\"project-bar\">\r\n        {projectsProgress &&\r\n          projectsProgress.map((item) => (\r\n            <div className=\"project-detail\">\r\n              <div className=\"project-title d-flex justify-content-between\">\r\n                <span>{item.title}</span>\r\n                <span>{item.time} days to deadline</span>\r\n              </div>\r\n              <ProgressBar\r\n                variant={\r\n                  item.percent < 50\r\n                    ? \"success\"\r\n                    : item.percent < 70\r\n                    ? \"warning\"\r\n                    : \"danger\"\r\n                }\r\n                now={item.percent}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsProgress;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface Connect {\r\n  name: string;\r\n  content: string;\r\n}\r\ninterface IRecentConnect {\r\n  recentConnects: Array<Connect>;\r\n}\r\nfunction RecentConnect({ recentConnects }: IRecentConnect) {\r\n  return (\r\n    <div className=\"recent-connect\">\r\n      <h5 className=\"title\">Recent Connect</h5>\r\n      <ListGroup variant=\"flush\">\r\n        {recentConnects &&\r\n          recentConnects.map((connect) => (\r\n            <ListGroup.Item action>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <h6 className=\"name\">{connect.name}</h6>\r\n                  <p className=\"text-secondary\">{connect.content}</p>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentConnect;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\ninterface Mess {\r\n  name: string;\r\n  date: string;\r\n  content: string;\r\n}\r\ninterface RecentMess {\r\n  recentMessages: Array<Mess>;\r\n}\r\nfunction RecentMessage({ recentMessages }: RecentMess) {\r\n  return (\r\n    <div className=\"recent-message\">\r\n      <h5 className=\"title\">Recent Message</h5>\r\n      <ListGroup variant=\"flush\">\r\n        {recentMessages &&\r\n          recentMessages.map((mess) => (\r\n            <ListGroup.Item action>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"name\">{mess.name}</h6>\r\n                    <span className=\"text-secondary recent-date\">\r\n                      {mess.date}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-secondary\">{mess.content}</p>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentMessage;\r\n","import { Button, Form, FormControl, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\nfunction Search({ search }: { search: Function }) {\r\n  // const [valueSearch, setValueSearch] = useState(\"\");\r\n  const getValueSearch = function (e: any) {\r\n    search(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      <Form className=\"search d-flex position-relative\">\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={getValueSearch}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"search-btn position-absolute \"\r\n          variant=\"\"\r\n        >\r\n          <Image src=\"./img/search.svg\" />\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useState } from \"react\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport DashboardLeft from \"../../components/dashboard-left\";\r\nimport ProjectsProgress from \"../../components/dashboard-right/projects-progress\";\r\nimport RecentConnect from \"../../components/dashboard-right/recent-connect\";\r\nimport RecentMessage from \"../../components/dashboard-right/recent-message\";\r\nimport Search from \"../../components/seach-box\";\r\nimport \"./index.scss\";\r\n\r\nfunction DashBoard() {\r\n  const listProject: Array<any> = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    listProject.push({\r\n      title: \"Title \" + i,\r\n      author: \"author \" + i,\r\n      status: \"Active\",\r\n      date: new Date().toLocaleString(),\r\n    });\r\n  }\r\n\r\n  const recentMessages = [\r\n    {\r\n      name: \"Black\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  //\r\n  const recentConnects = [\r\n    {\r\n      name: \"Black\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  const [list, setList] = useState(listProject);\r\n  const search = (value: any) => {\r\n    console.log(value);\r\n\r\n    if (!value) {\r\n      setList(listProject);\r\n      return;\r\n    }\r\n    const newList = listProject.filter((item) =>\r\n      item.title.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    console.log(newList);\r\n    setList(newList);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"dasboard\">\r\n          <div className=\"top-content d-flex flex-column flex-md-row align-items-end align-items-md-stretch\">\r\n            <div className=\"mr-auto  mb-md-0 mb-1 search-box\">\r\n              <Search search={search} />\r\n            </div>\r\n\r\n            <Button className=\"btn-create \" variant=\"primary\">\r\n              New Project\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Row>\r\n              <Col sm={12} md={7}>\r\n                <DashboardLeft list={list} />\r\n              </Col>\r\n              <Col sm={12} md={5}>\r\n                <div className=\"dashboard-right\">\r\n                  <RecentMessage recentMessages={recentMessages} />\r\n                  <RecentConnect recentConnects={recentConnects} />\r\n                  <ProjectsProgress />\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default DashBoard;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\nimport { ChatListType } from \"../../../helper/chatListType\";\r\nimport \"./index.scss\";\r\ninterface Props {\r\n  chatList: Array<ChatListType>;\r\n  idCurrentChat: number;\r\n  onClickUserChat: (id: number) => void;\r\n}\r\nfunction ChatList({ chatList, idCurrentChat, onClickUserChat }: Props) {\r\n  return (\r\n    <ListGroup variant=\"flush\" className=\"chat-list\">\r\n      {chatList &&\r\n        chatList.map(function (userChat) {\r\n          return (\r\n            <ListGroup.Item\r\n              active={userChat.id === idCurrentChat}\r\n              action\r\n              eventKey={userChat.id}\r\n              key={userChat.id}\r\n              onClick={() => {\r\n                onClickUserChat(userChat.id);\r\n              }}\r\n              variant={userChat.countUnseen === 0 ? \"secondary\" : \"light\"}\r\n            >\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"name\">{userChat.receiver}</h6>\r\n                    <span className=\"text-secondary recent-date\">\r\n                      1 day ago\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"text-secondary mw-100 width-200 text-truncate\">\r\n                    {userChat.chats[userChat.chats.length - 1].content}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default ChatList;\r\n","import { Image } from \"react-bootstrap\";\r\n\r\nconst DirectMessage = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-between direct-message\">\r\n      <span>\r\n        Direct Message &nbsp;\r\n        <Image src=\"./img/angle-right.svg\" />\r\n      </span>\r\n      <span>\r\n        <Image src=\"./img/new message icon.svg\" alt=\"new mess\" />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\nexport default DirectMessage;\r\n","import \"./index.scss\";\r\n\r\nfunction ChatItem({ content, type }: { content: string; type: string }) {\r\n  return (\r\n    <li className={\"list-unstyled \" + type}>\r\n      <span className={\"message d-inline-block  \"}>{content}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ChatItem;\r\n","import { ChatType } from \"../../../helper/chatType\";\r\nimport ChatItem from \"../chat-item\";\r\nimport \"./index.scss\";\r\n\r\ninterface Props {\r\n  chats: Array<ChatType>;\r\n  myRefBottom: React.RefObject<HTMLDivElement>;\r\n  myID: number\r\n}\r\n\r\nfunction MessageContent({ chats, myRefBottom, myID }: Props) {\r\n  return (\r\n    <ul className=\"message-list overflow-auto text-break\">\r\n      {chats.map((mess, index) => (\r\n        <ChatItem\r\n          key={index}\r\n          content={mess.content}\r\n          type={\r\n            mess.id === myID ? \"text-right message-me\" : \"text-left message-guest\"\r\n          }\r\n        />\r\n      ))}\r\n\r\n      <div ref={myRefBottom} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default MessageContent;\r\n","import { Image, Button, Form } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\ninterface Props {\r\n  handleTyping: (e: any) => void;\r\n  onEnter: (e: any) => void;\r\n  message: string;\r\n  onSend: (e: any) => void;\r\n}\r\n\r\nfunction MessageFooter({ handleTyping, onEnter, message, onSend }: Props) {\r\n  return (\r\n    <div className=\"message-footer\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div>\r\n          <Image src=\"./img/paperclip icon.svg\" />\r\n        </div>\r\n        <div className=\"ml-4 w-100 \">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={1}\r\n            className=\"border-radius-20\"\r\n            type=\"text\"\r\n            placeholder=\"Start typing a message...\"\r\n            onChange={handleTyping}\r\n            onKeyPress={onEnter}\r\n            value={message}\r\n          />\r\n        </div>\r\n        <Button onClick={onSend} type=\"submit\" className=\"btn-send\">\r\n          Send\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageFooter;\r\n","import { Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\nfunction MessageHeader({ receiver }: { receiver: string }) {\r\n  return (\r\n    <div className=\"message-header\">\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div>\r\n          <Image src=\"./img/0.png\" alt=\"avatar\" />\r\n          <span className=\"message-detail__username\">{receiver}</span>\r\n        </div>\r\n        <span>\r\n          <Image src=\"./img/phone.svg\" alt=\"phone\" />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageHeader;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ChatList from \"../../components/message-left/chat-list\";\r\nimport DirectMessage from \"../../components/message-left/direct-message\";\r\nimport MessageContent from \"../../components/messages-right/message-content\";\r\nimport MessageFooter from \"../../components/messages-right/message-footer\";\r\nimport MessageHeader from \"../../components/messages-right/message-header\";\r\nimport Search from \"../../components/seach-box\";\r\nimport { addMessage } from \"../../redux/action/addMessage\";\r\nimport { seenMessage } from \"../../redux/action/seenMessage\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction Messages() {\r\n  //\r\n  const myID = 10;\r\n  const dispatch = useDispatch();\r\n  const chatList = useSelector(\r\n    (state: RootState) => state.chatListState.chatList\r\n  );\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  const [idCurrentChat, setIdCurrentChat] = useState<number>(\r\n    Number(localStorage.getItem(\"currentChat\")) || 1\r\n  );\r\n\r\n  // Function setChat\r\n  const onClickUserChat = (id: number) => {\r\n    dispatch(seenMessage(id));\r\n    setIdCurrentChat(id);\r\n    setMessage(\"\");\r\n    localStorage.setItem(\"currentChat\", JSON.stringify(id));\r\n    console.log(\"id\", id);\r\n  };\r\n\r\n  // Current Chat []\r\n  const currentChat =\r\n    chatList.find((currentChat) => currentChat.id === idCurrentChat) ||\r\n    chatList[0];\r\n\r\n  // Scroll To Bottom\r\n  const myRefBottom = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    myRefBottom.current?.scrollIntoView();\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [message]);\r\n\r\n  const handleTyping = function (e: any) {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  // On send Message\r\n  const onSend = function () {\r\n    if (message) {\r\n      dispatch(addMessage(idCurrentChat, myID, message));\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  //\r\n  const onEnter = (e: any) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      onSend();\r\n    }\r\n  };\r\n\r\n  //\r\n  const [searchValue, setSearchVaule] = useState(chatList);\r\n  const search = (value: string) => {\r\n    if (!value) {\r\n      setSearchVaule(chatList);\r\n    }\r\n    const newChatList = searchValue.filter((chat) => chat.receiver === value);\r\n    setSearchVaule(newChatList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-message \">\r\n      <div className=\"d-flex flex-column flex-lg-row justify-content-between \">\r\n        <div className=\"page-message__list\">\r\n          <DirectMessage />\r\n          <div className=\"mt-2 mb-2\">\r\n            <Search search={search} />\r\n          </div>\r\n          <ChatList\r\n            chatList={searchValue}\r\n            idCurrentChat={idCurrentChat}\r\n            onClickUserChat={onClickUserChat}\r\n          />\r\n        </div>\r\n        <div className=\"flex-item message-detail mt-2 mt-lg-0\">\r\n          <MessageHeader receiver={currentChat.receiver} />\r\n          <MessageContent\r\n            chats={currentChat.chats}\r\n            myRefBottom={myRefBottom}\r\n            myID={myID}\r\n          />\r\n          <MessageFooter\r\n            handleTyping={handleTyping}\r\n            onEnter={onEnter}\r\n            message={message}\r\n            onSend={onSend}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","export const addMessage = (idChat: number, idUser: number, content: string) => {\r\n  return {\r\n    type: \"ADD_CHAT\",\r\n    idChat,\r\n    idUser,\r\n    content,\r\n  };\r\n};\r\n","export const seenMessage = (idChat: number) => {\r\n  return {\r\n    type: \"SEEN_CHAT\",\r\n    idChat,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\nimport { Button, Pagination, Table } from \"react-bootstrap\";\r\nimport Search from \"../../components/seach-box\";\r\nimport \"./index.scss\";\r\n\r\nfunction Projects() {\r\n  const postPerPage = 5;\r\n  const columns = [\r\n    \"Status\",\r\n    \"Project Name\",\r\n    \"Project ID\",\r\n    \"Partner\",\r\n    \"Start Date\",\r\n    \"End Date\",\r\n  ];\r\n  const listProjects: Array<any> = [];\r\n  for (let i = 0; i <= 20; i++) {\r\n    listProjects.push({\r\n      status: \"Active\",\r\n      name: \"Medical Device \" + i,\r\n      ID: i,\r\n      partner: \"Partner \" + i,\r\n      start: new Date().toLocaleDateString(),\r\n      end: new Date().toLocaleDateString(),\r\n    });\r\n  }\r\n\r\n  //\r\n  const [projects, setProject] = useState(listProjects);\r\n  let [currentPage, setCurrentPage] = useState(1);\r\n\r\n  //\r\n  const indexOfFirstPost = (currentPage - 1) * postPerPage;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const currentPosts = projects.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const rows = currentPosts.map((post, index) => (\r\n    <tr key={index}>\r\n      {Object.values(post).map((value, index) => (\r\n        <td key={index}> {value} </td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n\r\n  // pagination\r\n  const totalPage = Math.ceil(projects.length / postPerPage);\r\n  let items = [];\r\n  for (let number = 1; number <= totalPage; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={() => {\r\n          setCurrentPage(number);\r\n        }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  const prenext = (number: number) => {\r\n    if (currentPage > 1 && number === -1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n    if (currentPage < totalPage && number === 1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n  };\r\n\r\n  const search = (value: any) => {\r\n    if (!value) {\r\n      setProject(listProjects);\r\n      return;\r\n    }\r\n    const newList = listProjects.filter(\r\n      (item) =>\r\n        item.status.includes(value) ||\r\n        item.name.includes(value) ||\r\n        item.partner.includes(value) ||\r\n        item.start.includes(value) ||\r\n        item.end.includes(value)\r\n    );\r\n    setProject(newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"projects\">\r\n      <div className=\"top-content d-flex flex-column flex-md-row align-items-end align-items-md-stretch\">\r\n        <div className=\"mr-auto  mb-md-0 mb-1 search-box\">\r\n          <Search search={search} />\r\n        </div>\r\n\r\n        <Button className=\"btn-create\" variant=\"primary\">\r\n          New Project\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"projects-content\">\r\n        <div className=\"table p-md-4 pr-md-5 p-0\">\r\n          <Table responsive=\"lg\">\r\n            <thead>\r\n              <tr>\r\n                {columns.map((column, index) => (\r\n                  <th key={index}>{column}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{rows}</tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"paginate d-flex\">\r\n          <div className=\" m-auto\">\r\n            <Pagination>\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  prenext(-1);\r\n                }}\r\n              >\r\n                Pre\r\n              </Button>\r\n              {items}\r\n              <Button\r\n                variant=\"text\"\r\n                onClick={() => {\r\n                  prenext(1);\r\n                }}\r\n              >\r\n                Next\r\n              </Button>\r\n            </Pagination>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { seenNotify } from \"../../redux/action/notify\";\r\nimport { RootState } from \"../../redux/reducer\";\r\nimport \"./index.scss\";\r\n\r\nfunction Notifications() {\r\n  const notifies = useSelector(\r\n    (state: RootState) => state.notifiesState.notifies\r\n  );\r\n  const dispatch = useDispatch();\r\n  const handleSeen = (id: number) => {\r\n    dispatch(seenNotify(id));\r\n  };\r\n\r\n  // ==============RENDER===========\r\n  return (\r\n    <div className=\"page-notify\">\r\n      <ListGroup variant=\"flush\" className=\"page-notify__content bg-white\">\r\n        {notifies &&\r\n          notifies.map(function (notify: any, index: any) {\r\n            return (\r\n              <ListGroup.Item\r\n                action\r\n                key={index}\r\n                variant={notify.seen ? \"secondary\" : \"light\"}\r\n                onClick={() => {\r\n                  handleSeen(notify.id);\r\n                }}\r\n              >\r\n                <div className=\"d-flex align-items-center  \">\r\n                  <Image src=\"./img/0.png\" width=\"44\" height=\"44\" />\r\n                  <span className=\"name ml-2 mr-auto\">{notify.content}.</span>\r\n                  <span className=\"text-secondary recent-date \">1 day ago</span>\r\n                </div>\r\n              </ListGroup.Item>\r\n            );\r\n          })}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n","export const seenNotify = (id: number) => {\r\n  return {\r\n    type: \"SEEN\",\r\n    id,\r\n  };\r\n};\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"../components/layout\";\r\nimport DashBoard from \"../pages/dashboard\";\r\nimport Messages from \"../pages/messages\";\r\nimport Projects from \"../pages/projects\";\r\nimport Notifications from \"../pages/notifications\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Helmet>\r\n              <title>Dash Board</title>\r\n            </Helmet>\r\n            <DashBoard />\r\n          </Route>\r\n          <Route path=\"/projects\">\r\n            <Helmet>\r\n              <title>Projects</title>\r\n            </Helmet>\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/messages\">\r\n            <Helmet>\r\n              <title>Messages</title>\r\n            </Helmet>\r\n            <Messages />\r\n          </Route>\r\n          <Route path=\"/notifications\">\r\n            <Helmet>\r\n              <title>Notifications</title>\r\n            </Helmet>\r\n            <Notifications  />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.scss\";\nimport rootReducer from \"./redux/reducer/index\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./router\";\nimport logger from \"redux-logger\";\nimport \"./css/customs.scss\";\n\n// const persistedState = JSON.parse(localStorage.getItem(\"reduxState\") || \"{}\");\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\n// store.subscribe(() => {\n//   localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}