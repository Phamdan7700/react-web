{"version":3,"sources":["reportWebVitals.js","components/footer/index.tsx","components/logo/index.tsx","components/nav/index.tsx","components/notify/index.tsx","components/user/index.tsx","components/header/index.tsx","components/layout/index.tsx","components/dashboard-left/index.tsx","components/dashboard-right/projects-progress/index.tsx","components/dashboard-right/recent-connect/index.tsx","components/dashboard-right/recent-message/index.tsx","components/dashboard-right/index.tsx","components/seach-box/index.tsx","pages/dashboard/index.tsx","pages/messages/index.tsx","pages/projects/index.tsx","router/index.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","Container","fluid","className","Date","getFullYear","Logo","Navbar","Brand","as","Link","to","Image","alt","src","width","height","NavHeader","Nav","exact","NavLink","Badge","variant","Notify","Dropdown","NavItem","Toggle","Menu","Item","User","roundedCircle","align","Header","expand","aria-controls","Collapse","id","Layout","children","DashboardLeft","list","ListGroup","map","item","title","author","status","date","ProjectsProgress","ProgressBar","now","RecentConnect","recentConnect","name","content","connect","RecentMessage","recentMessage","toDateString","mess","DashBoardRight","Search","Form","FormControl","type","placeholder","aria-label","Button","DashBoard","i","push","toLocaleString","Row","Col","sm","Messages","Projects","useState","currentPage","setCurrentPage","postPerPage","projects","title1","title2","title3","title4","title5","title6","indexOfFirstPost","indexOfLastPost","rows","slice","post","index","Object","values","value","totalPage","Math","ceil","length","items","number","Pagination","active","onClick","prenext","Table","responsive","column","Prev","Next","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8BCGCQ,MARf,WACE,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,yBAAQC,UAAU,SAAlB,qBAAqC,IAAIC,MAAOC,cAAhD,4B,wBCKSC,MAPf,WACE,OACE,cAACC,EAAA,EAAOC,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,SACE,cAACC,EAAA,EAAD,CAAOC,IAAI,OAAOC,IAAI,qBAAqBC,MAAM,OAAOC,OAAO,OAAOb,UAAU,gC,sBCgBvEc,MAlBf,WACE,OACE,eAACC,EAAA,EAAD,CAAKf,UAAU,qBAAf,UACE,cAACe,EAAA,EAAIR,KAAL,CAAUS,OAAK,EAACV,GAAIW,IAAST,GAAG,KAAhC,uBAGA,cAACO,EAAA,EAAIR,KAAL,CAAUD,GAAIW,IAAST,GAAG,YAA1B,sBAGA,eAACO,EAAA,EAAIR,KAAL,CAAUD,GAAIW,IAAST,GAAG,YAAYR,UAAU,oBAAhD,qBACW,IACT,cAACkB,EAAA,EAAD,CAAOlB,UAAU,+BAA+BmB,QAAQ,SAAxD,sB,8BCIOC,MAhBf,WACE,OACE,eAACC,EAAA,EAAD,CAAUf,GAAIgB,IAAStB,UAAU,SAAjC,UACE,eAACqB,EAAA,EAASE,OAAV,CAAiBjB,GAAIW,IAASjB,UAAU,oBAAxC,UACE,cAACS,EAAA,EAAD,CAAOE,IAAI,mBAAmBD,IAAI,WAClC,cAACQ,EAAA,EAAD,CAAOlB,UAAU,iCAAiCmB,QAAQ,SAA1D,mBAIF,cAACE,EAAA,EAASG,KAAV,UACE,cAACH,EAAA,EAASI,KAAV,iC,MCQOC,MAlBf,WACE,OACE,eAACL,EAAA,EAAD,CAAUf,GAAIgB,IAAStB,UAAU,OAAjC,UACE,eAACqB,EAAA,EAASE,OAAV,CAAiBjB,GAAIW,IAASjB,UAAU,4BAAxC,UACE,cAACS,EAAA,EAAD,CAAOE,IAAI,cAAcC,MAAO,GAAIC,OAAQ,GAAIH,IAAI,MAAMiB,eAAa,IAEvE,sBAAK3B,UAAU,0BAAf,UACE,qBAAKA,UAAU,uBAAf,yBACA,qBAAKA,UAAU,yBAAf,+BAGJ,cAACqB,EAAA,EAASG,KAAV,CAAeI,MAAM,QAArB,SACE,cAACP,EAAA,EAASI,KAAV,2BCQOI,G,MAhBA,WACb,OACE,wBAAQ7B,UAAU,aAAlB,SACE,eAACI,EAAA,EAAD,CAAQJ,UAAU,SAAS8B,OAAO,KAAlC,UACE,cAAC,EAAD,IACA,cAAC1B,EAAA,EAAOmB,OAAR,CAAeQ,gBAAc,qBAC7B,eAAC3B,EAAA,EAAO4B,SAAR,CAAiBC,GAAG,mBAApB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,cCEKC,G,MAZA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,SAChB,OACE,qCACE,cAAC,EAAD,IACA,qBAAKnC,UAAU,YAAf,SACE,cAACF,EAAA,EAAD,CAAWE,UAAU,SAArB,SAA+BmC,MAEjC,cAAC,EAAD,S,wBCqBSC,MAvBf,YAA4C,IAAnBC,EAAkB,EAAlBA,KACvB,OACE,cAACC,EAAA,EAAD,UACGD,GACCA,EAAKE,KAAI,SAACC,GAAD,OACP,eAACF,EAAA,EAAUb,KAAX,CAAgBzB,UAAU,UAA1B,UACE,cAACS,EAAA,EAAD,CAAOE,IAAI,cAAcC,MAAM,OAAOC,OAAO,OAAOc,eAAa,IACjE,sBAAK3B,UAAU,4CAAf,UACE,sBAAKA,UAAU,QAAf,UACE,0CAAMwC,QAAN,IAAMA,OAAN,EAAMA,EAAMC,MAAZ,OACA,sBAAKzC,UAAU,iBAAf,qBAAkCwC,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAME,OAAxC,UAEF,gCACE,sBAAK1C,UAAU,2CAAf,qBAA4DwC,QAA5D,IAA4DA,OAA5D,EAA4DA,EAAMG,OAAlE,OACA,2CAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAMI,KAAb,sB,QCNDC,MAjBf,WACE,OACE,gCACE,sDACA,eAACP,EAAA,EAAD,CAAWnB,QAAQ,QAAnB,UACE,cAACmB,EAAA,EAAUb,KAAX,UACE,cAACqB,EAAA,EAAD,CAAaC,IAAK,OAEpB,cAACT,EAAA,EAAUb,KAAX,UACE,cAACqB,EAAA,EAAD,CAAaC,IAAK,OAEpB,cAACT,EAAA,EAAUb,KAAX,W,MCyBOuB,MAnCf,WACE,IAAMC,EAAgB,CACpB,CACEC,KAAM,QACNC,QAAS,8BAEX,CACED,KAAM,SACNC,QAAS,+BAIb,OACE,sBAAKnD,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,cAACsC,EAAA,EAAD,CAAWnB,QAAQ,QAAnB,SACG8B,GACCA,EAAcV,KAAI,SAACa,GAAD,OAChB,cAACd,EAAA,EAAUb,KAAX,UACE,sBAAKzB,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAACS,EAAA,EAAD,CAAOE,IAAI,kBAEb,sBAAKX,UAAU,mBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBoD,EAAQF,OAC9B,8BAAME,EAAQD,2B,MCejBE,MAxCf,WACE,IAAMC,EAAgB,CACpB,CACEJ,KAAM,QACNN,MAAM,IAAI3C,MAAOsD,eACjBJ,QAAS,8BAEX,CACED,KAAM,SACNN,MAAM,IAAI3C,MAAOsD,eACjBJ,QAAS,+BAIb,OACE,sBAAKnD,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,cAACsC,EAAA,EAAD,CAAWnB,QAAQ,QAAnB,SACGmC,GACCA,EAAcf,KAAI,SAACiB,GAAD,OAChB,cAAClB,EAAA,EAAUb,KAAX,UACE,sBAAKzB,UAAU,mBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAACS,EAAA,EAAD,CAAOE,IAAI,kBAEb,sBAAKX,UAAU,mBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBwD,EAAKN,OAC3B,sBAAMlD,UAAU,6BAAhB,SAA8CwD,EAAKZ,UAErD,8BAAMY,EAAKL,2BCnBdM,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,8BCOSC,MAdf,WACE,OACE,sBAAK1D,UAAU,6CAAf,UACE,eAAC2D,EAAA,EAAD,CAAM3D,UAAU,kCAAhB,UACE,cAAC4D,EAAA,EAAD,CAAaC,KAAK,SAASC,YAAY,SAAS9D,UAAU,OAAO+D,aAAW,WAC5E,cAACC,EAAA,EAAD,CAAQH,KAAK,SAAS7D,UAAU,gCAAgCmB,QAAQ,GAAxE,SACE,cAACV,EAAA,EAAD,CAAOE,IAAI,0BAGf,cAACqD,EAAA,EAAD,CAAQhE,UAAU,aAAamB,QAAQ,UAAvC,6B,MCuBS8C,MA5Bf,WAEE,IADA,IAAM5B,EAAO,GACJ6B,EAAI,EAAGA,EAAI,EAAGA,IACrB7B,EAAK8B,KAAK,CACR1B,MAAO,SAAWyB,EAClBxB,OAAQ,UAAYwB,EACpBvB,OAAQ,SACRC,MAAM,IAAI3C,MAAOmE,mBAIrB,OACE,qCACE,cAAC,EAAD,IACA,qBAAKpE,UAAU,UAAf,SACE,eAACqE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,CAAelC,KAAMA,MAEvB,cAACiC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC,EAAD,eCHGC,MApBf,WACE,OACE,mCACE,eAACH,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAAC,EAAD,IACA,eAACjC,EAAA,EAAD,WACE,cAACA,EAAA,EAAUb,KAAX,8BACA,cAACa,EAAA,EAAUb,KAAX,sCACA,cAACa,EAAA,EAAUb,KAAX,8BACA,cAACa,EAAA,EAAUb,KAAX,sCACA,cAACa,EAAA,EAAUb,KAAX,uCAGJ,cAAC6C,EAAA,EAAD,CAAKC,GAAI,EAAT,gC,wBCyEOE,MAtFf,WAME,IANmB,IAAD,EACkBC,mBAAS,GAD3B,mBACbC,EADa,KACAC,EADA,OAEkBF,mBAAS,GAF3B,mBAEbG,EAFa,KAKZC,GALY,KAKD,IACRZ,EAAI,EAAGA,GAAK,GAAIA,IACvBY,EAASX,KAAK,CACZY,OAAQ,QAAUb,EAClBc,OAAQ,QAAUd,EAClBe,OAAQ,QAAUf,EAClBgB,OAAQ,QAAUhB,EAClBiB,OAAQ,QAAUjB,EAClBkB,OAAQ,QAAUlB,IAmBtB,IAfA,IAAMmB,GAAoBV,EAAc,GAAKE,EACvCS,EAAkBX,EAAcE,EAGhCU,EAFeT,EAASU,MAAMH,EAAkBC,GAE5B/C,KAAI,SAACkD,EAAMC,GAAP,OAC5B,6BACGC,OAAOC,OAAOH,GAAMlD,KAAI,SAACsD,EAAOH,GAAR,OACvB,6BAAiBG,GAARH,OAFJA,MAQLI,EAAYC,KAAKC,KAAKlB,EAASmB,OAASpB,GAC1CqB,EAAQ,GA/BM,WAgCTC,GACPD,EAAM/B,KACJ,cAACiC,EAAA,EAAW3E,KAAZ,CAEE4E,OAAQF,IAAWxB,EACnB2B,QAAS,WACP1B,EAAeuB,IAJnB,SAOGA,GANIA,KAHFA,EAAS,EAAGA,GAAUL,EAAWK,IAAW,EAA5CA,GAcT,IAAMI,EAAU,SAACJ,GACXxB,EAAc,IAAiB,IAAZwB,GACrBvB,EAAeD,EAAcwB,GAE3BxB,EAAcmB,GAAwB,IAAXK,GAC7BvB,EAAeD,EAAcwB,IAIjC,OACE,qCAEE,cAAC,EAAD,IACA,eAACK,EAAA,EAAD,CAAOC,WAAW,KAAlB,UACE,gCACE,6BAzDQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WA0DrDlE,KAAI,SAACmE,EAAQhB,GAAT,OACX,6BAAiBgB,GAARhB,UAIf,gCAAQH,OAEV,eAACa,EAAA,EAAD,WACE,cAACA,EAAA,EAAWO,KAAZ,CACEL,QAAS,WACPC,GAAS,MAGZL,EACD,cAACE,EAAA,EAAWQ,KAAZ,CACEN,QAAS,WACPC,EAAQ,aCxDLM,MApBf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7F,OAAK,EAAC8F,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,c,MCXZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B/H,M","file":"static/js/main.f5744c80.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Container } from \"react-bootstrap\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container fluid>\r\n      <footer className=\"footer\">&copy; - {new Date().getFullYear()} All Right Reserved</footer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { Image, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Logo() {\r\n  return (\r\n    <Navbar.Brand as={Link} to=\"/\">\r\n      <Image alt=\"logo\" src=\"./img/GTI Logo.svg\" width=\"100%\" height=\"100%\" className=\"d-inline-block align-top\" />\r\n    </Navbar.Brand>\r\n  );\r\n}\r\nexport default Logo;\r\n","import { Nav, Badge } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\n\r\nfunction NavHeader() {\r\n  return (\r\n    <Nav className=\"mr-auto nav-header\">\r\n      <Nav.Link exact as={NavLink} to=\"./\">\r\n        DashBoard\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/projects\">\r\n        Projects\r\n      </Nav.Link>\r\n      <Nav.Link as={NavLink} to=\"/messages\" className=\"position-relative\">\r\n        Messages{\" \"}\r\n        <Badge className=\"mess-count position-absolute\" variant=\"danger\">\r\n          9\r\n        </Badge>\r\n      </Nav.Link>\r\n    </Nav>\r\n  );\r\n}\r\nexport default NavHeader;\r\n","import { Dropdown, Image, NavItem, NavLink, Badge } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction Notify() {\r\n  return (\r\n    <Dropdown as={NavItem} className=\"notify\">\r\n      <Dropdown.Toggle as={NavLink} className='position-relative'>\r\n        <Image src=\"./img/bell-o.svg\" alt=\"notify\" />\r\n        <Badge className=\"notify-count position-absolute\" variant=\"danger\">\r\n          20\r\n        </Badge>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Item>Hello there!</Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nexport default Notify;\r\n","import { Dropdown, Image, NavItem, NavLink } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction User() {\r\n  return (\r\n    <Dropdown as={NavItem} className=\"user\">\r\n      <Dropdown.Toggle as={NavLink} className=\"d-flex align-items-center\">\r\n        <Image src=\"./img/0.png\" width={40} height={40} alt=\"img\" roundedCircle />\r\n\r\n        <div className=\"d-flex flex-column ml-2\">\r\n          <div className=\"user-name text-light\">Donal Trump</div>\r\n          <div className=\"user-mode text-primary\">Client Mode</div>\r\n        </div>\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu align=\"right\">\r\n        <Dropdown.Item>Logout</Dropdown.Item>\r\n        \r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\nexport default User;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport Logo from \"../logo\";\r\nimport NavHeader from \"../nav\";\r\nimport Notify from \"../notify\";\r\nimport User from \"../user\";\r\nimport \"./index.scss\";\r\nconst Header = function () {\r\n  return (\r\n    <header className=\"header-top\">\r\n      <Navbar className=\"navbar\" expand=\"md\">\r\n        <Logo />\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <NavHeader />\r\n          <Notify />\r\n          <User />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { ReactNode } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Footer from \"../footer\";\r\nimport Header from \"../header\";\r\nimport \"./index.scss\";\r\n\r\nconst Layout = ({ children }: { children: ReactNode }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"main-page\">\r\n        <Container className=\"vh-100\">{children}</Container>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Image, ListGroup } from \"react-bootstrap\";\r\n\r\ninterface item {\r\n  title: string;\r\n  author: string;\r\n  status: string;\r\n  date: string;\r\n}\r\ninterface ListData {\r\n  list: Array<item>;\r\n}\r\nfunction DashboardLeft({ list }: ListData) {\r\n  return (\r\n    <ListGroup>\r\n      {list &&\r\n        list.map((item) => (\r\n          <ListGroup.Item className=\"d-flex \">\r\n            <Image src=\"./img/0.png\" width=\"50px\" height=\"50px\" roundedCircle />\r\n            <div className=\"d-flex justify-content-between w-100 ml-3\">\r\n              <div className=\"title\">\r\n                <h6> {item?.title} </h6>\r\n                <div className=\"text-secondary\"> {item?.author} </div>\r\n              </div>\r\n              <div>\r\n                <div className=\"text-success text-right font-weight-bold\"> {item?.status} </div>\r\n                <div> {item?.date} </div>\r\n              </div>\r\n            </div>\r\n          </ListGroup.Item>\r\n        ))}\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nexport default DashboardLeft;\r\n","import { ListGroup, ProgressBar } from \"react-bootstrap\";\r\n\r\nfunction ProjectsProgress() {\r\n  return (\r\n    <div>\r\n      <h5>Projects in progress</h5>\r\n      <ListGroup variant=\"flush\">\r\n        <ListGroup.Item>\r\n          <ProgressBar now={60} />\r\n        </ListGroup.Item>\r\n        <ListGroup.Item>\r\n          <ProgressBar now={60} />\r\n        </ListGroup.Item>\r\n        <ListGroup.Item></ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectsProgress;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction RecentConnect() {\r\n  const recentConnect = [\r\n    {\r\n      name: \"Black\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"recent-connect\">\r\n      <h5 className=\"title\">Recent Connect</h5>\r\n      <ListGroup variant=\"flush\">\r\n        {recentConnect &&\r\n          recentConnect.map((connect) => (\r\n            <ListGroup.Item>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <h6 className=\"name\">{connect.name}</h6>\r\n                  <div>{connect.content}</div>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentConnect;\r\n","import { ListGroup, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\n\r\nfunction RecentMessage() {\r\n  const recentMessage = [\r\n    {\r\n      name: \"Black\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n    {\r\n      name: \"WWhite\",\r\n      date: new Date().toDateString(),\r\n      content: \"Lorem ipsum dolor sit amet\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"recent-message\">\r\n      <h5 className=\"title\">Recent Message</h5>\r\n      <ListGroup variant=\"flush\" >\r\n        {recentMessage &&\r\n          recentMessage.map((mess) => (\r\n            <ListGroup.Item>\r\n              <div className=\"list-item d-flex\">\r\n                <div className=\"flex-grow-0 avatar\">\r\n                  <Image src=\"./img/0.png\" />\r\n                </div>\r\n                <div className=\"flex-grow-1 ml-2\">\r\n                  <div className=\"d-flex justify-content-between\">\r\n                    <h6 className=\"name\">{mess.name}</h6>\r\n                    <span className=\"text-secondary recent-date\">{mess.date}</span>\r\n                  </div>\r\n                  <div>{mess.content}</div>\r\n                </div>\r\n              </div>\r\n            </ListGroup.Item>\r\n          ))}\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecentMessage;\r\n","import ProjectsProgress from \"./projects-progress\";\r\nimport RecentConnect from \"./recent-connect\";\r\nimport RecentMessage from \"./recent-message\";\r\n\r\nfunction DashBoardRight() {\r\n  return (\r\n    <>\r\n      <RecentMessage />\r\n      <RecentConnect />\r\n      <ProjectsProgress />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashBoardRight;\r\n","import { Button, Form, FormControl, Image } from \"react-bootstrap\";\r\nimport \"./index.scss\";\r\nfunction Search() {\r\n  return (\r\n    <div className=\"top-content d-flex justify-content-between\">\r\n      <Form className=\"search d-flex position-relative\">\r\n        <FormControl type=\"search\" placeholder=\"Search\" className=\"mr-2\" aria-label=\"Search\" />\r\n        <Button type=\"submit\" className=\"search-btn position-absolute \" variant=\"\">\r\n          <Image src=\"./img/search.svg\" />\r\n        </Button>\r\n      </Form>\r\n      <Button className=\"btn-create\" variant=\"primary\">New Project</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { Col, Row } from \"react-bootstrap\";\r\nimport DashboardLeft from \"../../components/dashboard-left\";\r\nimport DashBoardRight from \"../../components/dashboard-right\";\r\nimport Search from \"../../components/seach-box\";\r\nimport \"./index.scss\";\r\n\r\nfunction DashBoard() {\r\n  const list = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    list.push({\r\n      title: \"Title \" + i,\r\n      author: \"author \" + i,\r\n      status: \"Active\",\r\n      date: new Date().toLocaleString(),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col sm={7}>\r\n            <DashboardLeft list={list} />\r\n          </Col>\r\n          <Col sm={5}>\r\n            <DashBoardRight />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashBoard;\r\n","import { Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport Search from \"../../components/seach-box\";\r\n\r\nfunction Messages() {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col sm={5}>\r\n          <Search />\r\n          <ListGroup>\r\n            <ListGroup.Item>Cras justo odio</ListGroup.Item>\r\n            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n            <ListGroup.Item>Morbi leo risus</ListGroup.Item>\r\n            <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\r\n            <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col sm={7}>álkdjsald</Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import { useState } from \"react\";\r\nimport { Button, Pagination, Table } from \"react-bootstrap\";\r\nimport Search from \"../../components/seach-box\";\r\n\r\nfunction Projects() {\r\n  let [currentPage, setCurrentPage] = useState(1);\r\n  let [postPerPage, setpostPerPage] = useState(5);\r\n\r\n  const columns = [\"Title 1\", \"Title 1\", \"Title 1\", \"Title 1\", \"Title 1\", \"Title 1\"];\r\n  const projects = [];\r\n  for (let i = 0; i <= 20; i++) {\r\n    projects.push({\r\n      title1: \"Data \" + i,\r\n      title2: \"Data \" + i,\r\n      title3: \"Data \" + i,\r\n      title4: \"Data \" + i,\r\n      title5: \"Data \" + i,\r\n      title6: \"Data \" + i,\r\n    });\r\n  }\r\n\r\n  const indexOfFirstPost = (currentPage - 1) * postPerPage;\r\n  const indexOfLastPost = currentPage * postPerPage;\r\n  const currentPosts = projects.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const rows = currentPosts.map((post, index) => (\r\n    <tr key={index}>\r\n      {Object.values(post).map((value, index) => (\r\n        <td key={index}>{value}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n\r\n  // pagination\r\n  const totalPage = Math.ceil(projects.length / postPerPage);\r\n  let items = [];\r\n  for (let number = 1; number <= totalPage; number++) {\r\n    items.push(\r\n      <Pagination.Item\r\n        key={number}\r\n        active={number === currentPage}\r\n        onClick={() => {\r\n          setCurrentPage(number);\r\n        }}\r\n      >\r\n        {number}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  const prenext = (number: number) => {\r\n    if (currentPage > 1 && number === -1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n    if (currentPage < totalPage && number === 1) {\r\n      setCurrentPage(currentPage + number);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n      <Search />       \r\n      <Table responsive=\"lg\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((column, index) => (\r\n              <th key={index}>{column}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </Table>\r\n      <Pagination>\r\n        <Pagination.Prev\r\n          onClick={() => {\r\n            prenext(-1);\r\n          }}\r\n        />\r\n        {items}\r\n        <Pagination.Next\r\n          onClick={() => {\r\n            prenext(1);\r\n          }}\r\n        />\r\n      </Pagination>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Layout from \"../components/layout\";\r\nimport DashBoard from \"../pages/dashboard\";\r\nimport Messages from \"../pages/messages\";\r\nimport Projects from \"../pages/projects\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <DashBoard />\r\n          </Route>\r\n          <Route path=\"/projects\">\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/messages\">\r\n            <Messages />\r\n          </Route>\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./router\";\nimport \"./css/customs.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}